@charset "UTF-8";

/// Generates vendor prefixes.
///
/// @param {string} $property
/// Property to prefix
///
/// @param {*} $value
/// Value to use
///
/// @param {list} $prefixes
/// Vendor prefixes to output
///
/// @example scss
/// .element {
///   @include prefixer(appearance, $value, webkit moz);
/// }
///
/// @example css
/// .element {
///   -webkit-appearance: none;
///   -moz-appearance: none;
///   appearance: none;
/// }
///
/// @require {variable} $global-prefixes
///
/// @author Hugo Giraudel

@mixin prefixer($property, $value, $prefixes: ()) {
  @each $prefix in $prefixes {
    @if not map-has-key($global-prefixes, $prefix) {
      @error "Unrecognized prefix: `#{$prefix}`.";
    }

    @if map-get($global-prefixes, $prefix) {
      #{"-" + $prefix + "-" + $property}: $value;
    }
  }

  #{$property}: $value;
}
