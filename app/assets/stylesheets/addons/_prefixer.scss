@charset "UTF-8";

/// A mixin for generating vendor prefixes on non-standardized properties.
///
/// @param {String} $property
///   Property to prefix
///
/// @param {*} $value
///   Value to use
///
/// @param {List} $prefixes
///   Prefixes to define
///
/// @example scss - Usage
///   .element {
///     @include prefixer(appearance, $value, webkit moz);
///   }
///
/// @example css - CSS Output
///   .element {
///     -webkit-appearance: none;
///     -moz-appearance: none;
///     appearance: none;
///   }
///
/// @require {map} $global-prefixes

@mixin prefixer($property, $value, $prefixes: ()) {
  @each $prefix in $prefixes {
    @if not map-has-key($global-prefixes, $prefix) {
      @error "Unrecognized prefix: `#{$prefix}`.";
    }

    @if map-get($global-prefixes, $prefix) {
      #{"-" + $prefix + "-" + $property}: $value;
    }
  }

  #{$property}: $value;
}
